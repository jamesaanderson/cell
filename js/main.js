// Generated by CoffeeScript 1.7.1
var HEIGHT, WIDTH, bacteria, bacteriaSprite, game, init, input, main, player, playerSprite, render, run, score, update, virusSprite, viruses;

WIDTH = window.innerWidth;

HEIGHT = window.innerHeight;

game = virusSprite = playerSprite = bacteriaSprite = viruses = bacteria = player = input = score = void 0;

main = function() {
  var img;
  game = new Game(WIDTH, HEIGHT);
  input = new InputHandler();
  img = new Image();
  $(img).on('load', function() {
    var cellSprite;
    virusSprite = new Sprite(this, 0, 0, 44, 52);
    playerSprite = new Sprite(this, 45, 0, 48, 52);
    bacteriaSprite = new Sprite(this, 94, 0, 80, 52);
    cellSprite = new Sprite(this, 245, 0, 28, 28);
    init();
    return run();
  });
  return img.src = 'img/sprites.png';
};

init = function() {
  player = new Entity(playerSprite, (WIDTH - playerSprite.w) / 2, HEIGHT - playerSprite.h);
  viruses = [];
  bacteria = [];
  _(10).times(function() {
    viruses.push(new Entity(virusSprite, Math.floor(Math.random() * (WIDTH - virusSprite.w)), Math.floor(Math.random() * ((HEIGHT - virusSprite.h) / 1.5))));
    return bacteria.push(new Entity(bacteriaSprite, Math.floor(Math.random() * (WIDTH - bacteriaSprite.w)), Math.floor(Math.random() * ((HEIGHT - bacteriaSprite.h) / 1.5))));
  });
  return setInterval((function() {
    if (viruses.length + bacteria.length < 30) {
      viruses.push(new Entity(virusSprite, Math.floor(Math.random() * (WIDTH - virusSprite.w)), Math.floor(Math.random() * ((HEIGHT - virusSprite.h) / 1.5))));
      return bacteria.push(new Entity(bacteriaSprite, Math.floor(Math.random() * (WIDTH - bacteriaSprite.w)), Math.floor(Math.random() * ((HEIGHT - bacteriaSprite.h) / 1.5))));
    }
  }), 5000);
};

run = function() {
  var gameLoop;
  gameLoop = function() {
    update();
    render();
    return window.requestAnimationFrame(gameLoop, game.canvas);
  };
  return window.requestAnimationFrame(gameLoop, game.canvas);
};

update = function() {
  if (input.isDown(38) || input.isDown(87)) {
    player.y -= 5;
  }
  if (input.isDown(40) || input.isDown(83)) {
    player.y += 5;
  }
  if (input.isDown(37) || input.isDown(65)) {
    player.x -= 5;
  }
  if (input.isDown(39) || input.isDown(68)) {
    player.x += 5;
  }
  player.x = Math.max(Math.min(player.x, WIDTH - virusSprite.w), 0);
  player.y = Math.max(Math.min(player.y, HEIGHT - virusSprite.h), 0);
  _(bacteria).each(function(bacterium) {
    var index;
    index = _.indexOf(bacteria, bacterium);
    if (bacterium.isCollision(player)) {
      return bacteria.splice(index, 1);
    }
  });
  return _(viruses).each(function(virus) {
    if (virus.isCollision(player)) {
      return init();
    }
  });
};

render = function() {
  var bacterium, virus, _i, _j, _len, _len1;
  game.clear();
  for (_i = 0, _len = viruses.length; _i < _len; _i++) {
    virus = viruses[_i];
    game.drawSprite(virus.sprite, virus.x, virus.y);
  }
  for (_j = 0, _len1 = bacteria.length; _j < _len1; _j++) {
    bacterium = bacteria[_j];
    game.drawSprite(bacterium.sprite, bacterium.x, bacterium.y);
  }
  return game.drawSprite(player.sprite, player.x, player.y);
};

main();
